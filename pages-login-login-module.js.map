{"version":3,"sources":["webpack:///./src/app/pages/login/login.module.ts","webpack:///./src/app/pages/login/login.page.html","webpack:///./src/app/pages/login/login.page.scss","webpack:///./src/app/pages/login/login.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACM;AAEN;AACU;AAenD;IAAA;IACA,CAAC;IADY,eAAe;QAZ3B,8DAAQ,CAAC;YACT,OAAO,EAAE;gBACR,2DAAY;gBACZ,4DAAY,CAAC,QAAQ,CAAC;oBACrB;wBACC,IAAI,EAAE,EAAE;wBACR,SAAS,EAAE,qDAAS;qBACpB;iBACD,CAAC;aACF;YACD,YAAY,EAAE,CAAC,qDAAS,CAAC;SACzB,CAAC;OACW,eAAe,CAC3B;IAAD,sBAAC;CAAA;AAD2B;;;;;;;;;;;;ACnB5B,4b;;;;;;;;;;;ACAA,6BAA6B,iBAAiB,EAAE,iBAAiB,uBAAuB,aAAa,cAAc,6CAA6C,6CAA6C,gBAAgB,2BAA2B,2BAA2B,kBAAkB,EAAE,cAAc,qBAAqB,EAAE,+CAA+C,2zB;;;;;;;;;;;;;;;;;;;;;;ACAzU;AACG;AACZ;AACA;AAEiB;AAoC1D;IAGC,mBACS,eAAgC,EAChC,WAAwB,EACxB,MAAc;QAHvB,iBAUC;QATQ,oBAAe,GAAf,eAAe,CAAiB;QAChC,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QALvB,YAAO,GAAG,IAAI,CAAC;QAOd,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,cAAI;YACnC,IAAI,CAAC,IAAI,EAAE;gBACV,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;aAC5B;QACF,CAAC,CAAC,CAAC;IACJ,CAAC;IAED,4BAAQ,GAAR;QACC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;IACtB,CAAC;IAEK,yBAAK,GAAX;;;;;;wBACC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;wBACe,qBAAM,IAAI,CAAC,aAAa,EAAE;;wBAAvD,SAAS,GAAoB,SAA0B;6BAEzD,UAAS,IAAI,SAAS,CAAC,kBAAkB,IAAI,SAAS,CAAC,kBAAkB,CAAC,OAAO,GAAjF,wBAAiF;wBACpF,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,SAAS,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC;wBAC/D,qBAAM,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;;wBAAjC,SAAiC,CAAC;wBAClC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;;4BAErB,MAAM,IAAI,KAAK,CAAC,+BAA+B,CAAC,CAAC;;;;;KAGlD;IAED,iCAAa,GAAb;QAAA,iBAWC;QAVA,OAAO,IAAI,OAAO,CAAM,UAAC,OAAO;YAC/B,IAAM,QAAQ,GAAG,IAAI,iDAAa,CAAC,kBAAkB,EAAE,CAAC;YACxD,QAAQ,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;YAC7B,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;YAC3B,KAAI,CAAC,eAAe,CAAC,IAAI;iBACvB,eAAe,CAAC,QAAQ,CAAC;iBACzB,IAAI,CAAC,aAAG;gBACR,OAAO,CAAC,GAAG,CAAC,CAAC;YACd,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACJ,CAAC;IA5CW,SAAS;QALrB,+DAAS,CAAC;YACV,QAAQ,EAAE,WAAW;YACrB,+FAAgC;;SAEhC,CAAC;+EAKyB,kEAAe;YACnB,kEAAW;YAChB,sDAAM;OANX,SAAS,CA6CrB;IAAD,gBAAC;CAAA;AA7CqB","file":"pages-login-login-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { LoginPage } from './login.page';\nimport { SharedModule } from '../../shared.module';\n\n\n@NgModule({\n\timports: [\n\t\tSharedModule,\n\t\tRouterModule.forChild([\n\t\t\t{\n\t\t\t\tpath: '',\n\t\t\t\tcomponent: LoginPage\n\t\t\t}\n\t\t])\n\t],\n\tdeclarations: [LoginPage]\n})\nexport class LoginPageModule {\n}\n","module.exports = \"<ion-content>\\n  <img src=\\\"./assets/aeji.gif\\\" alt=\\\"\\\" class=\\\"login-aeji\\\">\\n  \\n  <ion-row class=\\\"login-wp\\\" align-items-center justify-content-center>\\n    <ion-button *ngIf=\\\"!loading\\\" (click)=\\\"logIn()\\\">\\n      <ion-icon name=\\\"logo-google\\\"></ion-icon>\\n      <span class=\\\"login-g\\\">login</span>\\n    </ion-button>\\n\\n    <ion-spinner *ngIf=\\\"loading\\\" name=\\\"dots\\\"></ion-spinner>\\n  </ion-row>\\n</ion-content>\\n\"","module.exports = \".login-wp {\\n  height: 100%; }\\n\\n.login-aeji {\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n  -webkit-transform: translate(-50%, -50%);\\n          transform: translate(-50%, -50%);\\n  height: 80%;\\n  -o-object-fit: contain;\\n     object-fit: contain;\\n  opacity: 0.02; }\\n\\n.login-g {\\n  margin-left: 5px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3RyYXZpcy9idWlsZC9nY2hyb25vcy9hZWppL3NyYy9hcHAvcGFnZXMvbG9naW4vbG9naW4ucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNFO0VBQ0UsWUFBWSxFQUFBOztBQUdkO0VBQ0Usa0JBQWtCO0VBQ2xCLFFBQVE7RUFDUixTQUFTO0VBQ1Qsd0NBQWdDO1VBQWhDLGdDQUFnQztFQUNoQyxXQUFXO0VBQ1gsc0JBQW1CO0tBQW5CLG1CQUFtQjtFQUNuQixhQUFhLEVBQUE7O0FBR2Y7RUFDRSxnQkFBZ0IsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2xvZ2luL2xvZ2luLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5sb2dpbiB7XG4gICYtd3Age1xuICAgIGhlaWdodDogMTAwJTtcbiAgfVxuXG4gICYtYWVqaSB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogNTAlO1xuICAgIGxlZnQ6IDUwJTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcbiAgICBoZWlnaHQ6IDgwJTtcbiAgICBvYmplY3QtZml0OiBjb250YWluO1xuICAgIG9wYWNpdHk6IDAuMDI7XG4gIH1cblxuICAmLWcge1xuICAgIG1hcmdpbi1sZWZ0OiA1cHg7XG4gIH1cbn1cbiJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { Router } from '@angular/router';\nimport * as firebase from 'firebase/app';\n\nimport { UserService } from '../../services/user.service';\n\nexport interface IGoogleUserProfile {\n\temail: string;\n\tfamily_name: string;\n\tgiven_name: string;\n\tgranted_scopes: string;\n\tid: string;\n\tlocale: string;\n\tname: string;\n\tpicture: string;\n\tverified_email: boolean;\n}\n\nexport interface IGoogleLoginRes {\n\tadditionalUserInfo: {\n\t\tisNewUser: boolean;\n\t\tprofile: IGoogleUserProfile,\n\t\tproviderId: string;\n\t};\n\tcredential: {\n\t\ta: null;\n\t\taccessToken: string;\n\t\tidToken: string;\n\t\tproviderId: string;\n\t\tsignInMethod: string;\n\t};\n\toperationType: string;\n\tuser?: object;\n}\n\n@Component({\n\tselector: 'app-login',\n\ttemplateUrl: './login.page.html',\n\tstyleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n\tloading = true;\n\n\tconstructor(\n\t\tprivate angularFireAuth: AngularFireAuth,\n\t\tprivate userService: UserService,\n\t\tprivate router: Router,\n\t) {\n\t\tthis.userService.user.subscribe(user => {\n\t\t\tif (!user) {\n\t\t\t\tthis.router.navigate(['/']);\n\t\t\t}\n\t\t});\n\t}\n\n\tngOnInit(): void {\n\t\tthis.loading = false;\n\t}\n\n\tasync logIn(): Promise<void> {\n\t\tthis.loading = true;\n\t\tconst gLoginRes: IGoogleLoginRes = await this.doGoogleLogin();\n\n\t\tif (gLoginRes && gLoginRes.additionalUserInfo && gLoginRes.additionalUserInfo.profile) {\n\t\t\tthis.userService.setUser(gLoginRes.additionalUserInfo.profile);\n\t\t\tawait this.router.navigate(['/']);\n\t\t\tthis.loading = false;\n\t\t} else {\n\t\t\tthrow new Error('Can\\'t save user credentials.');\n\t\t}\n\n\t}\n\n\tdoGoogleLogin(): Promise<any> {\n\t\treturn new Promise<any>((resolve) => {\n\t\t\tconst provider = new firebase.auth.GoogleAuthProvider();\n\t\t\tprovider.addScope('profile');\n\t\t\tprovider.addScope('email');\n\t\t\tthis.angularFireAuth.auth\n\t\t\t\t.signInWithPopup(provider)\n\t\t\t\t.then(res => {\n\t\t\t\t\tresolve(res);\n\t\t\t\t});\n\t\t});\n\t}\n}\n"],"sourceRoot":""}