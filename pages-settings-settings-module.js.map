{"version":3,"sources":["webpack:///./src/app/pages/settings/settings.module.ts","webpack:///./src/app/pages/settings/settings.page.html","webpack:///./src/app/pages/settings/settings.page.scss","webpack:///./src/app/pages/settings/settings.page.ts"],"names":[],"mappings":"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","file":"pages-settings-settings-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { SettingsPage } from './settings.page';\nimport { SharedModule } from '../../shared.module';\n\n\n@NgModule({\n\timports: [\n\t\tSharedModule,\n\t\tRouterModule.forChild([\n\t\t\t{\n\t\t\t\tpath: '',\n\t\t\t\tcomponent: SettingsPage\n\t\t\t}\n\t\t])\n\t],\n\tdeclarations: [SettingsPage]\n})\nexport class SettingsPageModule {\n}\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n\\n    <ion-title>\\n      Settings\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <form [formGroup]=\\\"settings\\\" (ngSubmit)=\\\"submit(settings)\\\">\\n    <ion-item class=\\\"ion-margin-bottom\\\">\\n      <ion-label position=\\\"floating\\\">Widget id of donationalerts</ion-label>\\n      <ion-input formControlName=\\\"donationalertsId\\\"></ion-input>\\n      <ion-button (click)=\\\"test(SettingsHelp.donationalerts)\\\" slot=\\\"end\\\" strong class=\\\"aeji-input-btn\\\">\\n        <ion-icon name=\\\"help-circle-outline\\\"></ion-icon>\\n      </ion-button>\\n    </ion-item>\\n\\n\\n    <ion-button type=\\\"submit\\\" [disabled]=\\\"settings.invalid\\\" expand=\\\"full\\\" strong>SAVE</ion-button>\\n  </form>\\n</ion-content>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3NldHRpbmdzL3NldHRpbmdzLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { ModalController, ToastController } from '@ionic/angular';\n\nimport { UserService } from '../../services/user.service';\nimport { environment } from '../../../environments/environment';\nimport { IGoogleUserProfile } from '../login/login.page';\nimport { ImagePage } from '../../modals/image/image.page';\n\nexport interface IUserSettings {\n\tdonationalertsId: string;\n}\n\nexport interface IUserData {\n\tsettings: IUserSettings;\n\tuser: IGoogleUserProfile;\n}\n\nexport interface ISettingsHelp {\n\timage: string;\n\ttitle: string;\n}\n\nexport enum SettingsHelp {\n\tdonationalerts,\n}\n\n@Component({\n\tselector: 'app-settings',\n\ttemplateUrl: './settings.page.html',\n\tstyleUrls: ['./settings.page.scss'],\n})\nexport class SettingsPage implements OnInit {\n\tSettingsHelp = SettingsHelp;\n\tuser: IGoogleUserProfile;\n\thelp: ISettingsHelp[] = [\n\t\t{\n\t\t\timage: './assets/help/donationalerts.png',\n\t\t\ttitle: 'Where I can find donationalerts id?'\n\t\t}\n\t];\n\tsettings = this.formBuilder.group({\n\t\tdonationalertsId: ['', Validators.compose([\n\t\t\tValidators.minLength(5)\n\t\t])],\n\t});\n\n\tconstructor(\n\t\tprivate formBuilder: FormBuilder,\n\t\tprivate userService: UserService,\n\t\tprivate httpClient: HttpClient,\n\t\tprivate toastController: ToastController,\n\t\tprivate modalController: ModalController\n\t) {\n\t}\n\n\tasync ngOnInit() {\n\t\tthis.userService\n\t\t\t.getUserData()\n\t\t\t.subscribe((userData: IUserData) => {\n\t\t\t\tif (userData && userData.settings) {\n\t\t\t\t\tthis.settings.setValue({\n\t\t\t\t\t\t...userData.settings\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\tthis.user = this.userService.user.value;\n\t}\n\n\tsubmit(form): void {\n\t\tif (form.valid) {\n\t\t\tconst settings = form.value;\n\n\t\t\tthis.httpClient.post(`${environment.apiURL}/settings`, {\n\t\t\t\tuserId: this.user.id,\n\t\t\t\tsettings\n\t\t\t}).toPromise();\n\n\t\t\tthis.userService.setSettings(settings);\n\n\t\t\tthis.showToastOnSubmit();\n\t\t}\n\t}\n\n\tasync test(helpId: SettingsHelp) {\n\t\tconst modal = await this.modalController.create({\n\t\t\tcomponent: ImagePage,\n\t\t\tcomponentProps: {\n\t\t\t\thelp: this.help[helpId]\n\t\t\t}\n\t\t});\n\t\treturn await modal.present();\n\t}\n\n\tasync showToastOnSubmit() {\n\t\tconst toast = await this.toastController.create({\n\t\t\tmessage: 'Settings saved',\n\t\t\tposition: 'bottom',\n\t\t\tduration: 2000,\n\t\t\tshowCloseButton: true\n\t\t});\n\t\ttoast.present();\n\t}\n}\n"],"sourceRoot":""}